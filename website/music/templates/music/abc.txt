{% extends 'music/base.html' %}
{% block title %}Album Details{% endblock %}
{% block body %}
    <img src="{{ album.album_logo }}" height="200" width="200">

    <h1>{{ album.album_title }}</h1>

    <h3>{{ album.artist }}</h3>


    {% for song in album.song_set.all %}

        {{ song.song_title }}
        {% if song.is_favorite %}
            <img src="http://i.imgur.com/b9b13Rd.png"/>
        {% endif %}
    <br>
    {% endfor %}

{% endblock %}




<!--
<ul>
    {% for song in album.song_set.all %}
    <li>{{ song.song_title }}.{{song.file_type}}</li>
    {% endfor %}


    {% if error_message %}
    <p><strong>{{ error_message }}</strong></p>
    {% endif%}


    <form action="{% url 'music:favorite' album.id %}" method="post">
 <input type="radio" id="song{{forloop.counter}}" name="song" value="{{ song.id }}"/>
        <label for="song{{forloop.counter}}">

        <input type="submit" value="Favorite">
    </form>
     {% csrf_token %}
</ul>-->



 # # /music/
    # url(r'^$', views.index, name='index'),
    #
    # # /music/<album_id>/
    # url(r'^(?P<album_id>[0-9]+)/$', views.details, name='detail'),

    # /music/<album_id>/favorite/
    # url(r'^(?P<album_id>[0-9]+)/favorite/$', views.favorite, name='favorite'),


28 repeat again

# from django.shortcuts import render, get_object_or_404
#
# from .models import Album, Song
#
#
# def index(request):
#     all_albums = Album.objects.all()
#
#     return render(request, 'music/index.html', {'all_albums': all_albums})
#
#
# def details(request, album_id):
#     album = get_object_or_404(Album, pk=album_id)
#     return render(request, 'music/details.html', {'album': album})
#
#
# def favorite(request, album_id):
#     album = get_object_or_404(Album, pk=album_id)
#     try:
#         selected_song = album.song_set.get(pk=request.POST['song'])
#     except (KeyError, Song.DoesNotExist):
#         return render(request, 'music/details.html',
#                       {'album': album,
#                        'error_message': 'You did not select a valid song', })
#     else:
#         selected_song.is_favorite = True
#         selected_song.save()
#         return render(request, 'music/details.html', {'album': album})


'''  html = ''
        for album in all_albums:
        url = '/music/' + str(album.id) + '/'
        html += '<a href="' + url + '">' + album.album_title + '</a><br>'
         template = loader.get_template('music/index.html')
         HttpResponse(template.render(context, request))

       try:
        album = Album.objects.get(pk=album_id)
    except Album.DoesNotExist:
        raise Http404("Album Doesn't Exist")

   '''
